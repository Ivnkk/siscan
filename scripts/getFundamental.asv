%%% this function imports the data from the text file and reshapes the
%%% spectrum to match the dimensions of the single shot dscan
%%% INPUT: res - sensor resolution
%%%        bin - binning factor
%%%        Lext/Hext - low/high extension of frequency range, IN RAD/fs!!
%%% OUTPUT:
%%%        w - frequency vector
%%%        I - spectral intensity
%res,bin,Lext,Hext


function [w,I] = getFundamental(res,bin,Lext,Hext) 
if nargin <3
    Lext = 0; %default values - no extension of the freq.range, just use the fundamental.
    Hext = 0; 
end
%% open the dialog and import the data
filter = {'*.dat';'*.txt'};
[file,path] = uigetfile(filter);
  if isequal(file,0)
    disp('Cancelled')
  else
    disp(['User selected ',fullfile(path,file)])
  end
  M = readtable(fullfile(path,file),'Delimiter','tab','ReadVariableNames',false);
  M = str2double(table2array(M))./1e3;
%% process
  c = 3e8; % speed of light
  
  wf_1 = 2*pi*(c/M(1,1))*1e-6 + Hext; %border of the defined freq. range #1

  wf_2 = (2*pi*(c/M(end,1))*1e-6) + Lext; %border of the freq. range #2

  w_exp = 2*pi*(c./M(:,1))*1e-6; %measured frequency range
  
  w = linspace(wf_1,wf_2,length(M(:,1)))'; %interp
  
  I = max(0,M(:,2));
  
  I = interp1(w_exp,I,w,'linear',0)./w.^2;
  
  I = I./max(I);
  
  del = length(I) - res;
  
  w(1:del) = [];
  
  I(1:del) = [];
  
  w = arrayfun(@(i) mean(w(i:i+bin-1)),1:bin:length(w)-bin+1);
  
  I = arrayfun(@(i) mean(I(i:i+bin-1)),1:bin:length(I)-bin+1);
  
end
